{"version":3,"sources":["components/Cards.jsx","components/Dashboard.jsx","components/LogoSvg.jsx","components/ToDoApp.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["Cards","className","type","placeholder","onClick","e","target","parentElement","remove","style","zIndex","class","onChange","children","classList","toggle","name","id","Dashboard","useState","cards","setCards","key","uuidv4","map","item","LogoSvg","xmlns","fill","viewBox","stroke","d","ToDoApp","dash","setDash","document","querySelector","singleDashboard","prevState","filter","value","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mOAmCeA,MAjCf,WAWE,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,uBAAOA,UAAU,YAAYC,KAAK,OAAOC,YAAY,aACrD,wBAAQC,QARG,SAACC,GAChBA,EAAEC,OAAOC,cAAcA,cAAcC,UAONC,MAAO,CAAEC,OAAQ,MAA5C,kBAIF,sBAAKT,UAAU,aAAf,UACE,wBAAOU,MAAM,aAAb,UACE,uBAAOT,KAAK,WAAWU,SApBd,SAACP,GAChBA,EAAEC,OAAOC,cAAcA,cAAcM,SAAS,GAAGC,UAAUC,OACzD,eAmBI,sBAFF,wBAKA,qBAAKd,UAAU,YAAf,SACE,0BAAUA,UAAU,aAAae,KAAK,GAAGC,GAAG,c,QCIvCC,MA5Bf,WAAsB,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,KAOnB,OACE,qBAAKpB,UAAU,oBAAf,SACE,gCACE,uBACEC,KAAK,OACLD,UAAU,gBACVE,YAAY,uBAEd,wBAAQF,UAAU,aAAaG,QAZrB,WACdiB,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEE,IAAKC,mBAWvB,eAGA,8BACGH,EAAMI,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,GAAYA,EAAKH,gBCTdI,EAbC,WACd,OACE,sBAAKC,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,aAAaC,OAAO,eAAhF,UACE,oBAAGb,GAAG,aAAaW,KAAK,oBAAxB,UACE,sBAAMX,GAAG,QAAQc,EAAE,gDACnB,sBAAMd,GAAG,QAAQc,EAAE,kDAErB,sBAAMH,KAAK,oBAAoBG,EAAE,mUAC/Bd,GAAG,cC8CIe,MAnDf,WAAoB,IAAD,EACOb,mBAAS,CAAC,cAAC,EAAD,GAAgBI,iBADjC,mBACVU,EADU,KACJC,EADI,KAmBjB,OACE,gCACE,wBAAOjB,GAAG,cAAchB,UAAU,aAAlC,UACE,uBAAOC,KAAK,WAAWU,SAVT,WAClBuB,SAASC,cAAc,SAAStB,UAAUC,OAAO,kBACjDoB,SACGC,cAAc,oBACdtB,UAAUC,OAAO,wBAOhB,sBACA,mBAAGd,UAAU,kBAAb,2BAEF,sBAAKA,UAAU,qBAAf,UACGgC,EAAKT,KAAI,SAACa,GAET,OACE,gCACE,cAAC,EAAD,IACA,qBAAKpC,UAAU,yBAAf,SACE,wBACEA,UAAU,gBACVG,QAAS,kBA5BLkB,EA4BsBe,EAAgBf,SA3BxDY,GAAQ,SAACI,GAAD,mBAAmBA,EAAUC,QAAO,SAACd,GAAD,OAAUA,EAAKH,MAAQA,SADlD,IAACA,GA0BN,SAIE,cAAC,EAAD,GAAcC,qBAPVc,EAAgBf,QAa9B,qBAAKrB,UAAU,aAAf,SACE,uBAAOC,KAAK,SAASE,QAzCb,WACd8B,EAAQ,GAAD,mBAAKD,GAAL,CAAW,cAAC,EAAD,GAAgBV,mBAwCWiB,MAAM,8BCrCxCC,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlB,SAASmB,eAAe,SAM1BZ,M","file":"static/js/main.768fd5a3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Cards() {\r\n  const showDesc = (e) => {\r\n    e.target.parentElement.parentElement.children[1].classList.toggle(\r\n      'hideDesc'\r\n    );\r\n  };\r\n\r\n  const hideCard = (e) => {\r\n    e.target.parentElement.parentElement.remove();\r\n  };\r\n\r\n  return (\r\n    <div className='textInp newItem'>\r\n      <div className='cardTitleHolder'>\r\n        <input className='cardTitle' type='text' placeholder='Name me!' />\r\n        <button onClick={hideCard} style={{ zIndex: 9999 }}>\r\n          x\r\n        </button>\r\n      </div>\r\n      <div className='descHolder'>\r\n        <label class='formSwitch'>\r\n          <input type='checkbox' onChange={showDesc} />\r\n          <i></i>\r\n          Description On/Off\r\n        </label>\r\n        <div className='cardTrans'>\r\n          <textarea className='inputClass' name='' id=''></textarea>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;","import { useState } from 'react';\r\nimport Cards from './Cards.jsx';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction Dashboard() {\r\n  const [cards, setCards] = useState([]);\r\n\r\n  const addCard = () => {\r\n    setCards([...cards, { key: uuidv4() }]);\r\n  };\r\n\r\n  return (\r\n    <div className='dashboard newItem'>\r\n      <div>\r\n        <input\r\n          type='text'\r\n          className='dashboardName'\r\n          placeholder='Untitled dashboard'\r\n        />\r\n        <button className='addCardBtn' onClick={addCard}>\r\n          +\r\n        </button>\r\n        <div>\r\n          {cards.map((item) => (\r\n            <Cards key={item.key} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\n\r\nconst LogoSvg = () => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 -9 30 40\" stroke=\"currentColor\">\r\n      <g id=\"trashGroup\" fill=\"rgb(253, 130, 88)\" >\r\n        <path id=\"path4\" d=\"M10 3v3h9V3a1 1 0 0 0-1-1h-7a1 1 0 0 0-1 1z\" />\r\n        <path id=\"path6\" d=\"M4 5v1h21V5a1 1 0 0 0-1-1H5a1 1 0 0 0-1 1z\" />\r\n      </g>\r\n      <path fill=\"rgb(253, 130, 88)\" d=\"M6 8l1.812 17.209A2 2 0 0 0 9.801 27H19.2a2 2 0 0 0 1.989-1.791L23 8H6zm4.577 16.997a.999.999 0 0 1-1.074-.92l-1-13a1 1 0 0 1 .92-1.074.989.989 0 0 1 1.074.92l1 13a1 1 0 0 1-.92 1.074zM15.5 24a1 1 0 0 1-2 0V11a1 1 0 0 1 2 0v13zm3.997.077a.999.999 0 1 1-1.994-.154l1-13a.985.985 0 0 1 1.074-.92 1 1 0 0 1 .92 1.074l-1 13z\"\r\n        id=\"path8\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default LogoSvg;","import React, { useState } from 'react';\r\nimport Dashboard from './Dashboard';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport LogoSvg from './LogoSvg.jsx';\r\n\r\nfunction ToDoApp() {\r\n  const [dash, setDash] = useState([<Dashboard key={uuidv4()} />]);\r\n  //Item Add\r\n  const addDash = () => {\r\n    setDash([...dash, <Dashboard key={uuidv4()} />]);\r\n  };\r\n  //Item Remove\r\n  const removeItem = (key) => {\r\n    setDash((prevState) => [...prevState.filter((item) => item.key !== key)]);\r\n  };\r\n\r\n  //Theme Change\r\n  const themeChange = () => {\r\n    document.querySelector('#root').classList.toggle('themeChangeClr');\r\n    document\r\n      .querySelector('.themeChangeText')\r\n      .classList.toggle('themeChangeTxtClr');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label id='themeChange' className='formSwitch'>\r\n        <input type='checkbox' onChange={themeChange} />\r\n        <i></i>\r\n        <p className='themeChangeText'>Night mode</p>\r\n      </label>\r\n      <div className='dashBoardContainer'>\r\n        {dash.map((singleDashboard) => {\r\n          // if (singleDashboard === undefined) return undefined;\r\n          return (\r\n            <div key={singleDashboard.key}>\r\n              <Dashboard />\r\n              <div className='deleteDashBtnContainer'>\r\n                <button\r\n                  className='deleteDashBtn'\r\n                  onClick={() => removeItem(singleDashboard.key)}\r\n                >\r\n                  <LogoSvg key={uuidv4()} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        <div className='addDashBtn'>\r\n          <input type='button' onClick={addDash} value='+ Add Dashboard ' />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoApp;\r\n","import React from 'react';\r\nimport '../style/app.css';\r\nimport ToDoApp from './ToDoApp';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <ToDoApp />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}