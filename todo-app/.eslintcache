[{"C:\\Users\\Marci\\Desktop\\codecool\\projects\\10-14 week\\todo-app-javascript-RekaKR\\todo-app\\src\\index.js":"1","C:\\Users\\Marci\\Desktop\\codecool\\projects\\10-14 week\\todo-app-javascript-RekaKR\\todo-app\\src\\reportWebVitals.js":"2","C:\\Users\\Marci\\Desktop\\codecool\\projects\\10-14 week\\todo-app-javascript-RekaKR\\todo-app\\src\\components\\App.jsx":"3","C:\\Users\\Marci\\Desktop\\codecool\\projects\\10-14 week\\todo-app-javascript-RekaKR\\todo-app\\src\\components\\Dashboard.jsx":"4","C:\\Users\\Marci\\Desktop\\codecool\\projects\\10-14 week\\todo-app-javascript-RekaKR\\todo-app\\src\\components\\Cards.jsx":"5"},{"size":534,"mtime":1611751834248,"results":"6","hashOfConfig":"7"},{"size":375,"mtime":1611751834249,"results":"8","hashOfConfig":"7"},{"size":868,"mtime":1611759163521,"results":"9","hashOfConfig":"7"},{"size":1383,"mtime":1611757915543,"results":"10","hashOfConfig":"7"},{"size":423,"mtime":1611753705309,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"naokd0",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"C:\\Users\\Marci\\Desktop\\codecool\\projects\\10-14 week\\todo-app-javascript-RekaKR\\todo-app\\src\\index.js",[],["25","26"],"C:\\Users\\Marci\\Desktop\\codecool\\projects\\10-14 week\\todo-app-javascript-RekaKR\\todo-app\\src\\reportWebVitals.js",[],"C:\\Users\\Marci\\Desktop\\codecool\\projects\\10-14 week\\todo-app-javascript-RekaKR\\todo-app\\src\\components\\App.jsx",[],"C:\\Users\\Marci\\Desktop\\codecool\\projects\\10-14 week\\todo-app-javascript-RekaKR\\todo-app\\src\\components\\Dashboard.jsx",["27"],"import React, { useState } from 'react';\r\nimport '../style/app.css';\r\nimport Cards from './Cards.jsx';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction Dashboard() {\r\n  const [cards, setCards] = useState([]);\r\n  const listNameV = localStorage.getItem('listName');\r\n  const addCard = () => {\r\n    setCards([...cards, <Cards key={uuidv4()} />]);\r\n  };\r\n\r\n  return (\r\n    <div className='dashboard'>\r\n      <div>\r\n        <input\r\n          type='text'\r\n          className='dashboard-name'\r\n          // value={listNameV}\r\n          placeholder='Untilted dashboard'\r\n          // onChange={(event) => {\r\n          //   setNames(event.target.value);\r\n          //   localStorage.setItem('listName', event.target.value);\r\n          // }}\r\n        />\r\n        <button onClick={addCard}>add card</button>\r\n        <div>\r\n          {cards.map((entry) => (\r\n            <div>{entry}</div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    // <div className='dashboard'>\r\n    //   <input\r\n    //     type='text'\r\n    //     className='dashboard-name'\r\n    //     value={listNameV}\r\n    //     placeholder='Untilted dashboard'\r\n    //     onChange={(event) => {\r\n    //       setNames(event.target.value);\r\n    //       localStorage.setItem('listName', event.target.value);\r\n    //     }}\r\n    //   />\r\n    //   <TextInpBut />\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Marci\\Desktop\\codecool\\projects\\10-14 week\\todo-app-javascript-RekaKR\\todo-app\\src\\components\\Cards.jsx",["28","29"],"import React, { useState } from 'react';\r\nimport '../style/app.css';\r\n\r\nfunction Cards() {\r\n  const [cards, setCards] = useState([]);\r\n\r\n  return (\r\n    <div className='text-inp-but'>\r\n      {/* <button onClick={() => setCards([...cards, cards.length])}>Add</button>\r\n      {cards.map(card => { return <textarea className=\"card-text\" ></textarea> })} */}\r\n      im a new card\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":8,"column":9,"nodeType":"36","messageId":"37","endLine":8,"endColumn":18},{"ruleId":"34","severity":1,"message":"38","line":5,"column":10,"nodeType":"36","messageId":"37","endLine":5,"endColumn":15},{"ruleId":"34","severity":1,"message":"39","line":5,"column":17,"nodeType":"36","messageId":"37","endLine":5,"endColumn":25},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'listNameV' is assigned a value but never used.","Identifier","unusedVar","'cards' is assigned a value but never used.","'setCards' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]